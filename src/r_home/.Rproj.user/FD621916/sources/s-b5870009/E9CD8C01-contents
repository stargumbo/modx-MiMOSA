# 01-two-inputs

library(shiny)
library(shinydashboard)
library(RSiteCatalyst)
library(DT)
#3library(dplyr)
library(shinycssloaders)

SCAuth("tkoscinski@rccl.com:RCCI", "3d79ad14cf921df97ef8940ee94478cd")
rs <- GetReportSuites()

ui <- dashboardPage(
  dashboardHeader(title = "RCCL Analytics"),
  dashboardSidebar(
    sidebarMenu(
      selectInput("rsid", "Report Suite:", 
        choice = c("",split(rs$rsid,rs$site_title,sep="="))),
      menuItem("Report Suite Info", icon = icon("table"),
        selectInput("dataType", "Data Type:",
          c("", "Evars", "Props", "Events", "Elements", "Metrics", "Segments", "Processing Rules"))),
      menuItem("Pathing", icon = icon("list-alt")))),
  dashboardBody(
    div(
      withSpinner(
        DT::dataTableOutput("tbl"))),
    style="font-size:85%")
)

server = function(input, output) {
  output$tbl <- DT::renderDataTable({
    pathpattern <- c("rccl:cp:default","::anything::","::anything::","::anything::")
    if (input$rsid == "" || input$dataType == ""){
      NULL
    } else if (input$dataType == "Evars"){
      GetEvars(input$rsid)
    } else if (input$dataType == "Props"){
      GetProps(input$rsid)
    } else if (input$dataType == "Events"){
      GetSuccessEvents(input$rsid)
    } else if (input$dataType == "Elements"){
      GetElements(input$rsid)
    } else if (input$dataType == "Metrics"){
      GetMetrics(input$rsid)
    } else if (input$dataType == "Segments"){
      GetSegments(input$rsid)
    } else if (input$dataType == "Processing Rules"){
      web_data <- ViewProcessingRules(input$rsid)
      #web_data <- select(web_data, -rsid, -editable, -matchOn, -ruleNum)
      web_data <- filter(web_data, !grepl('WARNING:', title))
      web_data
    }
  })
}
shinyApp(ui, server)